openapi: 3.0.0
info:
  title: TypeScript Boilerplate With Prisma
  description: This is typescript with prisma boilerplate's API specification.
  version: 1.0.0
servers:
  - url: '{protocol}://{environment}/api/v1'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      environment:
        default: api    # Production server
        enum:
          - api         # Production server
          - api.dev     # Development server
          - localhost:3000 # Localhost server
tags:
- name: Books
  description: Books related API
components:
  securitySchemes:
    Bearer:
      type: apiKey
      description: Example value:- Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjU5MmQwMGJhNTJjYjJjM
      name: Authorization
      in: header
paths:
  /users:
    post:
      tags:
      - Users
      summary: Create New User
      description: Create User API
      operationId: createUser
      requestBody:
        description: User Details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                password:
                  type: string
                  description: Password must be atleast 6 characters
              required:
                - firstName
                - lastName
                - email
                - password
              example:
                firstName: John
                lastName: Snow
                email: johnsnow@gmail.com
                password: "abcd12"
      responses:
        200:
          description: User Information
          content:
            application/json:
              description: User Added Successfully
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      message: string
        400:
          description: Bad Request
          content:
            application/json:
              description: Validation Error
              schema:
                type: object
                properties:
                  error: string
        500:
          description: Internal Server error
          content:
            application/json:
              description: Something Went Wrong
              schema:
                type: object
                properties:
                  error: string


